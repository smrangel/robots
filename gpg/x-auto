#!/bin/bash


arch_null(){ #argumentos  //archivo_de_salida //linea_de_trabajo_en_el_archivo_de_salida
  if [[ 0 -eq $(awk '{print $1}' <<< $(wc -c $1)) ]]; then
	#(grep -n $line enc)
	if [[ -z $(grep -n $2  $1 | sed -e 's/:/ /g' | awk '{print $1}') ]]; then
         	echo $2 > $1
   	sed -i -e s/$2//g $1    ### eliminar archivo anterior
		pwd
	 	echo "nuevo"
         	echo $2
	 	#grep $2 $1
	fi
        if [[ '' != $(grep -n $2 $1 | sed -e 's/:/ /g' | awk '{print $1}') ]]; then
                echo "la linea ya estaba"
        fi

  else
  if [[ 0 -ne $(awk '{print $1}' <<< $(wc -c $1)) ]]; then
         if [[ -z $(grep -n $2 $1 | sed -e 's/:/ /g' | awk '{print $1}') ]]; then
	 	echo $2 >> $1
         	echo "viejo"
         	echo $2
	 	pwd
	 fi
	 if [[ '' != $(grep -n $2 $1 | sed -e 's/:/ /g' | awk '{print $1}') ]]; then
                echo "la linea ya estaba"
         fi
  fi
  fi
}
#bash x-auto //usuario //archivo_a_tratar //comando_encriptar_o_desencriptar //lugar de registro
if [[ $3 = 'enc' ]]; then
	recipient=$(awk '{print $1}' ~/robots/gpg/$1/inf)
	vb=$(find . -path ./*$2)
	gpg --recipient $recipient -e $vb
	out=$2'.gpg'
	cd $1
	pwd
        echo $(awk '{print $1}' <<< $(wc -c gits))
	sed -i -e s/$2//g  dec
	arch_null "gits" $2 ###line no es archivo
fi
if [[ $3 = 'dec' ]]; then
        vb=$(find . -path ./*$2)
	pss=$(pass RACM980122USA)
	dfg=$(sed s/.gpg//g <<< $2)
	echo 'dfg: ' $dfg
	gpg --output $dfg --batch --yes --pinentry-mode loopback --passphrase $pss -d $vb
	cd $1
	echo "vb: "$vb
	pwd
	arch_null "dec" $2
fi
